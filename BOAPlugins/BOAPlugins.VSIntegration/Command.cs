using BOAPlugins.ExportingModel;

namespace BOAPlugins.VSIntegration
{
    class Command
    {
        #region Public Properties
        public IVisualStudioLayer VisualStudio { get; set; }
        #endregion

        #region Public Methods
        public void UpdateMessageCs()
        {
            var solutionFilePath = VisualStudio.GetSolutionFilePath();

            var result = MessagingExporter.ExportAsCSharpCode(solutionFilePath);
            if (result.ErrorMessage != null)
            {
                VisualStudio.UpdateStatusbarText(result.ErrorMessage);
                return;
            }

            Util.WriteFileIfContentNotEqual(result.TargetFilePath, result.GeneratedCode);
            VisualStudio.UpdateStatusbarText("Messages.cs successfully updated.");
        }
        public void UpdateMessageTsx()
        {
            var solutionFilePath = VisualStudio.GetSolutionFilePath();

            var result = MessagingExporter.ExportAsTypeScriptCode(solutionFilePath);
            if (result.ErrorMessage != null)
            {
                VisualStudio.UpdateStatusbarText(result.ErrorMessage);
                return;
            }

            Util.WriteFileIfContentNotEqual(result.TargetFilePath, result.GeneratedCode);
            VisualStudio.UpdateStatusbarText("Messages.tsx successfully updated.");
        }
        

        public void UpdateTypeScriptModels()
        {
            var solutionFilePath = VisualStudio.GetSolutionFilePath();

            var data = Handler.Handle(solutionFilePath);

            if (data.ErrorMessage != null)
            {
                VisualStudio.UpdateStatusbarText(data.ErrorMessage);
                return;
            }

            Util.WriteFileIfContentNotEqual(data.TargetFilePath, data.GeneratedTSCode);

            VisualStudio.UpdateStatusbarText("TypeScript autogenerated codes successfully updated.");
        }
        #endregion
    }
}